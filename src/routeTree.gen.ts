/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PayImport } from './routes/pay'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as IndexImport } from './routes/index'
import { Route as AdminOrdersImport } from './routes/admin/orders'
import { Route as AdminAddProductImport } from './routes/admin/addProduct'

// Create/Update Routes

const PayRoute = PayImport.update({
  id: '/pay',
  path: '/pay',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRoute = CheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminOrdersRoute = AdminOrdersImport.update({
  id: '/admin/orders',
  path: '/admin/orders',
  getParentRoute: () => rootRoute,
} as any)

const AdminAddProductRoute = AdminAddProductImport.update({
  id: '/admin/addProduct',
  path: '/admin/addProduct',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/pay': {
      id: '/pay'
      path: '/pay'
      fullPath: '/pay'
      preLoaderRoute: typeof PayImport
      parentRoute: typeof rootRoute
    }
    '/admin/addProduct': {
      id: '/admin/addProduct'
      path: '/admin/addProduct'
      fullPath: '/admin/addProduct'
      preLoaderRoute: typeof AdminAddProductImport
      parentRoute: typeof rootRoute
    }
    '/admin/orders': {
      id: '/admin/orders'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRoute
  '/pay': typeof PayRoute
  '/admin/addProduct': typeof AdminAddProductRoute
  '/admin/orders': typeof AdminOrdersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRoute
  '/pay': typeof PayRoute
  '/admin/addProduct': typeof AdminAddProductRoute
  '/admin/orders': typeof AdminOrdersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRoute
  '/pay': typeof PayRoute
  '/admin/addProduct': typeof AdminAddProductRoute
  '/admin/orders': typeof AdminOrdersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/checkout' | '/pay' | '/admin/addProduct' | '/admin/orders'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/checkout' | '/pay' | '/admin/addProduct' | '/admin/orders'
  id:
    | '__root__'
    | '/'
    | '/checkout'
    | '/pay'
    | '/admin/addProduct'
    | '/admin/orders'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CheckoutRoute: typeof CheckoutRoute
  PayRoute: typeof PayRoute
  AdminAddProductRoute: typeof AdminAddProductRoute
  AdminOrdersRoute: typeof AdminOrdersRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CheckoutRoute: CheckoutRoute,
  PayRoute: PayRoute,
  AdminAddProductRoute: AdminAddProductRoute,
  AdminOrdersRoute: AdminOrdersRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/checkout",
        "/pay",
        "/admin/addProduct",
        "/admin/orders"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/checkout": {
      "filePath": "checkout.tsx"
    },
    "/pay": {
      "filePath": "pay.tsx"
    },
    "/admin/addProduct": {
      "filePath": "admin/addProduct.tsx"
    },
    "/admin/orders": {
      "filePath": "admin/orders.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
